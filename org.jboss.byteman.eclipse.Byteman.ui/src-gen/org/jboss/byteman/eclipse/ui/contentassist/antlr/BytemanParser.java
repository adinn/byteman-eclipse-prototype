/*
* generated by Xtext
*/
package org.jboss.byteman.eclipse.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import org.jboss.byteman.eclipse.services.BytemanGrammarAccess;

public class BytemanParser extends AbstractContentAssistParser {
	
	@Inject
	private BytemanGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected org.jboss.byteman.eclipse.ui.contentassist.antlr.internal.InternalBytemanParser createParser() {
		org.jboss.byteman.eclipse.ui.contentassist.antlr.internal.InternalBytemanParser result = new org.jboss.byteman.eclipse.ui.contentassist.antlr.internal.InternalBytemanParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getDomainModelAccess().getAlternatives_1(), "rule__DomainModel__Alternatives_1");
					put(grammarAccess.getElementAccess().getAlternatives(), "rule__Element__Alternatives");
					put(grammarAccess.getEventAccess().getAlternatives_0(), "rule__Event__Alternatives_0");
					put(grammarAccess.getMethodNameAccess().getAlternatives(), "rule__MethodName__Alternatives");
					put(grammarAccess.getLocationSpecifierAccess().getAlternatives(), "rule__LocationSpecifier__Alternatives");
					put(grammarAccess.getAtLocationAccess().getAlternatives(), "rule__AtLocation__Alternatives");
					put(grammarAccess.getAfterLocationAccess().getAlternatives(), "rule__AfterLocation__Alternatives");
					put(grammarAccess.getAtExitAccess().getAlternatives_1(), "rule__AtExit__Alternatives_1");
					put(grammarAccess.getAtReadAccess().getAlternatives(), "rule__AtRead__Alternatives");
					put(grammarAccess.getAfterReadAccess().getAlternatives(), "rule__AfterRead__Alternatives");
					put(grammarAccess.getAtWriteAccess().getAlternatives(), "rule__AtWrite__Alternatives");
					put(grammarAccess.getAfterWriteAccess().getAlternatives(), "rule__AfterWrite__Alternatives");
					put(grammarAccess.getAtInvokeAccess().getAlternatives_1(), "rule__AtInvoke__Alternatives_1");
					put(grammarAccess.getAfterInvokeAccess().getAlternatives_1(), "rule__AfterInvoke__Alternatives_1");
					put(grammarAccess.getCounterAccess().getAlternatives(), "rule__Counter__Alternatives");
					put(grammarAccess.getBindAccess().getAlternatives_2(), "rule__Bind__Alternatives_2");
					put(grammarAccess.getActionsAccess().getAlternatives_2(), "rule__Actions__Alternatives_2");
					put(grammarAccess.getActionAccess().getAlternatives(), "rule__Action__Alternatives");
					put(grammarAccess.getOperatorExprAccess().getOpAlternatives_1_1_0(), "rule__OperatorExpr__OpAlternatives_1_1_0");
					put(grammarAccess.getPlusMinusOperandAccess().getOpAlternatives_1_1_0(), "rule__PlusMinusOperand__OpAlternatives_1_1_0");
					put(grammarAccess.getTimesDivOperandAccess().getAlternatives(), "rule__TimesDivOperand__Alternatives");
					put(grammarAccess.getTimesDivOperandAccess().getOpAlternatives_0_1_1_0(), "rule__TimesDivOperand__OpAlternatives_0_1_1_0");
					put(grammarAccess.getBitwiseOperandAccess().getAlternatives_0(), "rule__BitwiseOperand__Alternatives_0");
					put(grammarAccess.getBitwiseOperandAccess().getOpAlternatives_1_1_0(), "rule__BitwiseOperand__OpAlternatives_1_1_0");
					put(grammarAccess.getBitwiseOperandAccess().getOperand2Alternatives_1_2_0(), "rule__BitwiseOperand__Operand2Alternatives_1_2_0");
					put(grammarAccess.getLogicalOperandAccess().getOpAlternatives_1_1_0(), "rule__LogicalOperand__OpAlternatives_1_1_0");
					put(grammarAccess.getAccessExprAccess().getAlternatives_1(), "rule__AccessExpr__Alternatives_1");
					put(grammarAccess.getAccessBaseExprAccess().getAlternatives(), "rule__AccessBaseExpr__Alternatives");
					put(grammarAccess.getSimpleExprAccess().getAlternatives(), "rule__SimpleExpr__Alternatives");
					put(grammarAccess.getVariableExprAccess().getAlternatives(), "rule__VariableExpr__Alternatives");
					put(grammarAccess.getSpecialVarAccess().getAlternatives(), "rule__SpecialVar__Alternatives");
					put(grammarAccess.getConstantExprAccess().getAlternatives(), "rule__ConstantExpr__Alternatives");
					put(grammarAccess.getDomainModelAccess().getGroup(), "rule__DomainModel__Group__0");
					put(grammarAccess.getBytemanRuleAccess().getGroup(), "rule__BytemanRule__Group__0");
					put(grammarAccess.getBodyAccess().getGroup(), "rule__Body__Group__0");
					put(grammarAccess.getEventAccess().getGroup(), "rule__Event__Group__0");
					put(grammarAccess.getEventAccess().getGroup_4(), "rule__Event__Group_4__0");
					put(grammarAccess.getEventAccess().getGroup_5(), "rule__Event__Group_5__0");
					put(grammarAccess.getEventClassAccess().getGroup(), "rule__EventClass__Group__0");
					put(grammarAccess.getEventInterfaceAccess().getGroup(), "rule__EventInterface__Group__0");
					put(grammarAccess.getEventMethodAccess().getGroup(), "rule__EventMethod__Group__0");
					put(grammarAccess.getHelperAccess().getGroup(), "rule__Helper__Group__0");
					put(grammarAccess.getLocationSpecifierAccess().getGroup_0(), "rule__LocationSpecifier__Group_0__0");
					put(grammarAccess.getLocationSpecifierAccess().getGroup_1(), "rule__LocationSpecifier__Group_1__0");
					put(grammarAccess.getAtEntryAccess().getGroup(), "rule__AtEntry__Group__0");
					put(grammarAccess.getAtExitAccess().getGroup(), "rule__AtExit__Group__0");
					put(grammarAccess.getAtLineAccess().getGroup(), "rule__AtLine__Group__0");
					put(grammarAccess.getAtReadFieldAccess().getGroup(), "rule__AtReadField__Group__0");
					put(grammarAccess.getAtReadLocalAccess().getGroup(), "rule__AtReadLocal__Group__0");
					put(grammarAccess.getAfterReadFieldAccess().getGroup(), "rule__AfterReadField__Group__0");
					put(grammarAccess.getAfterReadLocalAccess().getGroup(), "rule__AfterReadLocal__Group__0");
					put(grammarAccess.getAtWriteFieldAccess().getGroup(), "rule__AtWriteField__Group__0");
					put(grammarAccess.getAtWriteLocalAccess().getGroup(), "rule__AtWriteLocal__Group__0");
					put(grammarAccess.getAfterWriteFieldAccess().getGroup(), "rule__AfterWriteField__Group__0");
					put(grammarAccess.getAfterWriteLocalAccess().getGroup(), "rule__AfterWriteLocal__Group__0");
					put(grammarAccess.getAtInvokeAccess().getGroup(), "rule__AtInvoke__Group__0");
					put(grammarAccess.getAfterInvokeAccess().getGroup(), "rule__AfterInvoke__Group__0");
					put(grammarAccess.getAtSynchronizeAccess().getGroup(), "rule__AtSynchronize__Group__0");
					put(grammarAccess.getAfterSynchronizeAccess().getGroup(), "rule__AfterSynchronize__Group__0");
					put(grammarAccess.getAtThrowAccess().getGroup(), "rule__AtThrow__Group__0");
					put(grammarAccess.getParameterTypesAccess().getGroup(), "rule__ParameterTypes__Group__0");
					put(grammarAccess.getParameterTypesAccess().getGroup_2(), "rule__ParameterTypes__Group_2__0");
					put(grammarAccess.getParameterTypesAccess().getGroup_2_1(), "rule__ParameterTypes__Group_2_1__0");
					put(grammarAccess.getBindAccess().getGroup(), "rule__Bind__Group__0");
					put(grammarAccess.getBindingsAccess().getGroup(), "rule__Bindings__Group__0");
					put(grammarAccess.getBindingsAccess().getGroup_1(), "rule__Bindings__Group_1__0");
					put(grammarAccess.getBindingAccess().getGroup(), "rule__Binding__Group__0");
					put(grammarAccess.getBindingAccess().getGroup_1(), "rule__Binding__Group_1__0");
					put(grammarAccess.getConditionAccess().getGroup(), "rule__Condition__Group__0");
					put(grammarAccess.getActionsAccess().getGroup(), "rule__Actions__Group__0");
					put(grammarAccess.getActionListAccess().getGroup(), "rule__ActionList__Group__0");
					put(grammarAccess.getActionListAccess().getGroup_1(), "rule__ActionList__Group_1__0");
					put(grammarAccess.getReturnExprAccess().getGroup(), "rule__ReturnExpr__Group__0");
					put(grammarAccess.getThrowExprAccess().getGroup(), "rule__ThrowExpr__Group__0");
					put(grammarAccess.getAssignmentExprAccess().getGroup(), "rule__AssignmentExpr__Group__0");
					put(grammarAccess.getAssignmentExprAccess().getGroup_1(), "rule__AssignmentExpr__Group_1__0");
					put(grammarAccess.getOperatorExprAccess().getGroup(), "rule__OperatorExpr__Group__0");
					put(grammarAccess.getOperatorExprAccess().getGroup_1(), "rule__OperatorExpr__Group_1__0");
					put(grammarAccess.getPlusMinusOperandAccess().getGroup(), "rule__PlusMinusOperand__Group__0");
					put(grammarAccess.getPlusMinusOperandAccess().getGroup_1(), "rule__PlusMinusOperand__Group_1__0");
					put(grammarAccess.getTimesDivOperandAccess().getGroup_0(), "rule__TimesDivOperand__Group_0__0");
					put(grammarAccess.getTimesDivOperandAccess().getGroup_0_1(), "rule__TimesDivOperand__Group_0_1__0");
					put(grammarAccess.getTimesDivOperandAccess().getGroup_1(), "rule__TimesDivOperand__Group_1__0");
					put(grammarAccess.getBitwiseOperandAccess().getGroup(), "rule__BitwiseOperand__Group__0");
					put(grammarAccess.getBitwiseOperandAccess().getGroup_1(), "rule__BitwiseOperand__Group_1__0");
					put(grammarAccess.getNotOperandAccess().getGroup(), "rule__NotOperand__Group__0");
					put(grammarAccess.getLogicalOperandAccess().getGroup(), "rule__LogicalOperand__Group__0");
					put(grammarAccess.getLogicalOperandAccess().getGroup_1(), "rule__LogicalOperand__Group_1__0");
					put(grammarAccess.getAccessExprAccess().getGroup(), "rule__AccessExpr__Group__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_0(), "rule__AccessExpr__Group_1_0__0");
					put(grammarAccess.getAccessExprAccess().getGroup_1_1(), "rule__AccessExpr__Group_1_1__0");
					put(grammarAccess.getBuiltinExprAccess().getGroup(), "rule__BuiltinExpr__Group__0");
					put(grammarAccess.getNewExprAccess().getGroup(), "rule__NewExpr__Group__0");
					put(grammarAccess.getCallArgumentsAccess().getGroup(), "rule__CallArguments__Group__0");
					put(grammarAccess.getCallArgumentsAccess().getGroup_2(), "rule__CallArguments__Group_2__0");
					put(grammarAccess.getCallArgumentsAccess().getGroup_2_1(), "rule__CallArguments__Group_2_1__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getIndexedSpecialVarAccess().getGroup(), "rule__IndexedSpecialVar__Group__0");
					put(grammarAccess.getSpecialVarAccess().getGroup_5(), "rule__SpecialVar__Group_5__0");
					put(grammarAccess.getBracketedExprAccess().getGroup(), "rule__BracketedExpr__Group__0");
					put(grammarAccess.getIntConstantExprAccess().getGroup(), "rule__IntConstantExpr__Group__0");
					put(grammarAccess.getStringConstantExprAccess().getGroup(), "rule__StringConstantExpr__Group__0");
					put(grammarAccess.getBooleanConstantExprAccess().getGroup(), "rule__BooleanConstantExpr__Group__0");
					put(grammarAccess.getFloatConstantExprAccess().getGroup(), "rule__FloatConstantExpr__Group__0");
					put(grammarAccess.getDomainModelAccess().getElementsAssignment_1_0(), "rule__DomainModel__ElementsAssignment_1_0");
					put(grammarAccess.getBytemanRuleAccess().getNameAssignment_0(), "rule__BytemanRule__NameAssignment_0");
					put(grammarAccess.getBytemanRuleAccess().getEventAssignment_2(), "rule__BytemanRule__EventAssignment_2");
					put(grammarAccess.getBytemanRuleAccess().getBodyAssignment_3(), "rule__BytemanRule__BodyAssignment_3");
					put(grammarAccess.getBodyAccess().getBindAssignment_0(), "rule__Body__BindAssignment_0");
					put(grammarAccess.getBodyAccess().getConditionAssignment_1(), "rule__Body__ConditionAssignment_1");
					put(grammarAccess.getBodyAccess().getActionsAssignment_2(), "rule__Body__ActionsAssignment_2");
					put(grammarAccess.getEventAccess().getClassAssignment_0_0(), "rule__Event__ClassAssignment_0_0");
					put(grammarAccess.getEventAccess().getInterfaceAssignment_0_1(), "rule__Event__InterfaceAssignment_0_1");
					put(grammarAccess.getEventAccess().getMethodAssignment_2(), "rule__Event__MethodAssignment_2");
					put(grammarAccess.getEventAccess().getHelperAssignment_4_0(), "rule__Event__HelperAssignment_4_0");
					put(grammarAccess.getEventAccess().getLocationSpecAssignment_5_0(), "rule__Event__LocationSpecAssignment_5_0");
					put(grammarAccess.getEventClassAccess().getKeywordAssignment_0(), "rule__EventClass__KeywordAssignment_0");
					put(grammarAccess.getEventClassAccess().getNameAssignment_1(), "rule__EventClass__NameAssignment_1");
					put(grammarAccess.getEventInterfaceAccess().getKeywordAssignment_0(), "rule__EventInterface__KeywordAssignment_0");
					put(grammarAccess.getEventInterfaceAccess().getNameAssignment_1(), "rule__EventInterface__NameAssignment_1");
					put(grammarAccess.getEventMethodAccess().getNameAssignment_1(), "rule__EventMethod__NameAssignment_1");
					put(grammarAccess.getEventMethodAccess().getParameterTypesAssignment_2(), "rule__EventMethod__ParameterTypesAssignment_2");
					put(grammarAccess.getHelperAccess().getHelperAssignment_2(), "rule__Helper__HelperAssignment_2");
					put(grammarAccess.getAtLineAccess().getLineAssignment_2(), "rule__AtLine__LineAssignment_2");
					put(grammarAccess.getAtReadFieldAccess().getNameAssignment_2(), "rule__AtReadField__NameAssignment_2");
					put(grammarAccess.getAtReadFieldAccess().getCounterAssignment_3(), "rule__AtReadField__CounterAssignment_3");
					put(grammarAccess.getAtReadLocalAccess().getNameAssignment_3(), "rule__AtReadLocal__NameAssignment_3");
					put(grammarAccess.getAtReadLocalAccess().getCounterAssignment_4(), "rule__AtReadLocal__CounterAssignment_4");
					put(grammarAccess.getAfterReadFieldAccess().getNameAssignment_2(), "rule__AfterReadField__NameAssignment_2");
					put(grammarAccess.getAfterReadFieldAccess().getCounterAssignment_3(), "rule__AfterReadField__CounterAssignment_3");
					put(grammarAccess.getAfterReadLocalAccess().getNameAssignment_3(), "rule__AfterReadLocal__NameAssignment_3");
					put(grammarAccess.getAfterReadLocalAccess().getCounterAssignment_4(), "rule__AfterReadLocal__CounterAssignment_4");
					put(grammarAccess.getAtWriteFieldAccess().getNameAssignment_2(), "rule__AtWriteField__NameAssignment_2");
					put(grammarAccess.getAtWriteFieldAccess().getCounterAssignment_3(), "rule__AtWriteField__CounterAssignment_3");
					put(grammarAccess.getAtWriteLocalAccess().getNameAssignment_3(), "rule__AtWriteLocal__NameAssignment_3");
					put(grammarAccess.getAtWriteLocalAccess().getCounterAssignment_4(), "rule__AtWriteLocal__CounterAssignment_4");
					put(grammarAccess.getAfterWriteFieldAccess().getNameAssignment_2(), "rule__AfterWriteField__NameAssignment_2");
					put(grammarAccess.getAfterWriteFieldAccess().getCounterAssignment_3(), "rule__AfterWriteField__CounterAssignment_3");
					put(grammarAccess.getAfterWriteLocalAccess().getNameAssignment_3(), "rule__AfterWriteLocal__NameAssignment_3");
					put(grammarAccess.getAfterWriteLocalAccess().getCounterAssignment_4(), "rule__AfterWriteLocal__CounterAssignment_4");
					put(grammarAccess.getAtInvokeAccess().getNameAssignment_2(), "rule__AtInvoke__NameAssignment_2");
					put(grammarAccess.getAtInvokeAccess().getParameterTypesAssignment_3(), "rule__AtInvoke__ParameterTypesAssignment_3");
					put(grammarAccess.getAtInvokeAccess().getCounterAssignment_4(), "rule__AtInvoke__CounterAssignment_4");
					put(grammarAccess.getAfterInvokeAccess().getNameAssignment_2(), "rule__AfterInvoke__NameAssignment_2");
					put(grammarAccess.getAfterInvokeAccess().getParameterTypesAssignment_3(), "rule__AfterInvoke__ParameterTypesAssignment_3");
					put(grammarAccess.getAfterInvokeAccess().getCounterAssignment_4(), "rule__AfterInvoke__CounterAssignment_4");
					put(grammarAccess.getAtSynchronizeAccess().getCounterAssignment_2(), "rule__AtSynchronize__CounterAssignment_2");
					put(grammarAccess.getAfterSynchronizeAccess().getCounterAssignment_2(), "rule__AfterSynchronize__CounterAssignment_2");
					put(grammarAccess.getAtThrowAccess().getNameAssignment_2(), "rule__AtThrow__NameAssignment_2");
					put(grammarAccess.getAtThrowAccess().getCounterAssignment_3(), "rule__AtThrow__CounterAssignment_3");
					put(grammarAccess.getParameterTypesAccess().getParamTypeNamesAssignment_2_0(), "rule__ParameterTypes__ParamTypeNamesAssignment_2_0");
					put(grammarAccess.getParameterTypesAccess().getParamTypeNamesAssignment_2_1_1(), "rule__ParameterTypes__ParamTypeNamesAssignment_2_1_1");
					put(grammarAccess.getBindAccess().getBindAssignment_2_1(), "rule__Bind__BindAssignment_2_1");
					put(grammarAccess.getBindingsAccess().getBindingsAssignment_0(), "rule__Bindings__BindingsAssignment_0");
					put(grammarAccess.getBindingsAccess().getBindingsAssignment_1_1(), "rule__Bindings__BindingsAssignment_1_1");
					put(grammarAccess.getBindingAccess().getBindVariableAssignment_0(), "rule__Binding__BindVariableAssignment_0");
					put(grammarAccess.getBindingAccess().getTypenameAssignment_1_1(), "rule__Binding__TypenameAssignment_1_1");
					put(grammarAccess.getBindingAccess().getValueAssignment_3(), "rule__Binding__ValueAssignment_3");
					put(grammarAccess.getActionsAccess().getActionListAssignment_2_0(), "rule__Actions__ActionListAssignment_2_0");
					put(grammarAccess.getActionListAccess().getActionsAssignment_0(), "rule__ActionList__ActionsAssignment_0");
					put(grammarAccess.getActionListAccess().getActionsAssignment_1_1(), "rule__ActionList__ActionsAssignment_1_1");
					put(grammarAccess.getReturnExprAccess().getOpAssignment_0(), "rule__ReturnExpr__OpAssignment_0");
					put(grammarAccess.getReturnExprAccess().getOperand1Assignment_1(), "rule__ReturnExpr__Operand1Assignment_1");
					put(grammarAccess.getThrowExprAccess().getOpAssignment_0(), "rule__ThrowExpr__OpAssignment_0");
					put(grammarAccess.getThrowExprAccess().getOperand1Assignment_1(), "rule__ThrowExpr__Operand1Assignment_1");
					put(grammarAccess.getAssignmentExprAccess().getOpAssignment_1_1(), "rule__AssignmentExpr__OpAssignment_1_1");
					put(grammarAccess.getAssignmentExprAccess().getOperand2Assignment_1_2(), "rule__AssignmentExpr__Operand2Assignment_1_2");
					put(grammarAccess.getOperatorExprAccess().getOpAssignment_1_1(), "rule__OperatorExpr__OpAssignment_1_1");
					put(grammarAccess.getOperatorExprAccess().getOperand2Assignment_1_2(), "rule__OperatorExpr__Operand2Assignment_1_2");
					put(grammarAccess.getPlusMinusOperandAccess().getOpAssignment_1_1(), "rule__PlusMinusOperand__OpAssignment_1_1");
					put(grammarAccess.getPlusMinusOperandAccess().getOperand2Assignment_1_2(), "rule__PlusMinusOperand__Operand2Assignment_1_2");
					put(grammarAccess.getTimesDivOperandAccess().getOpAssignment_0_1_1(), "rule__TimesDivOperand__OpAssignment_0_1_1");
					put(grammarAccess.getTimesDivOperandAccess().getOperand2Assignment_0_1_2(), "rule__TimesDivOperand__Operand2Assignment_0_1_2");
					put(grammarAccess.getTimesDivOperandAccess().getOpAssignment_1_0(), "rule__TimesDivOperand__OpAssignment_1_0");
					put(grammarAccess.getTimesDivOperandAccess().getOperand1Assignment_1_1(), "rule__TimesDivOperand__Operand1Assignment_1_1");
					put(grammarAccess.getBitwiseOperandAccess().getOpAssignment_1_1(), "rule__BitwiseOperand__OpAssignment_1_1");
					put(grammarAccess.getBitwiseOperandAccess().getOperand2Assignment_1_2(), "rule__BitwiseOperand__Operand2Assignment_1_2");
					put(grammarAccess.getNotOperandAccess().getOpAssignment_0(), "rule__NotOperand__OpAssignment_0");
					put(grammarAccess.getNotOperandAccess().getOperand1Assignment_1(), "rule__NotOperand__Operand1Assignment_1");
					put(grammarAccess.getLogicalOperandAccess().getOpAssignment_1_1(), "rule__LogicalOperand__OpAssignment_1_1");
					put(grammarAccess.getLogicalOperandAccess().getOperand2Assignment_1_2(), "rule__LogicalOperand__Operand2Assignment_1_2");
					put(grammarAccess.getAccessExprAccess().getOpAssignment_1_0_1(), "rule__AccessExpr__OpAssignment_1_0_1");
					put(grammarAccess.getAccessExprAccess().getOperand2Assignment_1_0_2(), "rule__AccessExpr__Operand2Assignment_1_0_2");
					put(grammarAccess.getAccessExprAccess().getOpAssignment_1_1_1(), "rule__AccessExpr__OpAssignment_1_1_1");
					put(grammarAccess.getAccessExprAccess().getValueAssignment_1_1_2(), "rule__AccessExpr__ValueAssignment_1_1_2");
					put(grammarAccess.getAccessExprAccess().getArgsAssignment_1_1_3(), "rule__AccessExpr__ArgsAssignment_1_1_3");
					put(grammarAccess.getBuiltinExprAccess().getValueAssignment_1(), "rule__BuiltinExpr__ValueAssignment_1");
					put(grammarAccess.getBuiltinExprAccess().getArgsAssignment_2(), "rule__BuiltinExpr__ArgsAssignment_2");
					put(grammarAccess.getNewExprAccess().getOpAssignment_1(), "rule__NewExpr__OpAssignment_1");
					put(grammarAccess.getNewExprAccess().getValueAssignment_2(), "rule__NewExpr__ValueAssignment_2");
					put(grammarAccess.getNewExprAccess().getParamsAssignment_3(), "rule__NewExpr__ParamsAssignment_3");
					put(grammarAccess.getCallArgumentsAccess().getArgsAssignment_2_0(), "rule__CallArguments__ArgsAssignment_2_0");
					put(grammarAccess.getCallArgumentsAccess().getArgsAssignment_2_1_1(), "rule__CallArguments__ArgsAssignment_2_1_1");
					put(grammarAccess.getSimpleNameAccess().getValueAssignment(), "rule__SimpleName__ValueAssignment");
					put(grammarAccess.getIndexedSpecialVarAccess().getOpAssignment_0(), "rule__IndexedSpecialVar__OpAssignment_0");
					put(grammarAccess.getIndexedSpecialVarAccess().getValueAssignment_1(), "rule__IndexedSpecialVar__ValueAssignment_1");
					put(grammarAccess.getSpecialVarAccess().getOpAssignment_0(), "rule__SpecialVar__OpAssignment_0");
					put(grammarAccess.getSpecialVarAccess().getOpAssignment_1(), "rule__SpecialVar__OpAssignment_1");
					put(grammarAccess.getSpecialVarAccess().getOpAssignment_2(), "rule__SpecialVar__OpAssignment_2");
					put(grammarAccess.getSpecialVarAccess().getOpAssignment_3(), "rule__SpecialVar__OpAssignment_3");
					put(grammarAccess.getSpecialVarAccess().getOpAssignment_4(), "rule__SpecialVar__OpAssignment_4");
					put(grammarAccess.getSpecialVarAccess().getOpAssignment_5_0(), "rule__SpecialVar__OpAssignment_5_0");
					put(grammarAccess.getSpecialVarAccess().getValueAssignment_5_1(), "rule__SpecialVar__ValueAssignment_5_1");
					put(grammarAccess.getIntConstantExprAccess().getValueAssignment_1(), "rule__IntConstantExpr__ValueAssignment_1");
					put(grammarAccess.getStringConstantExprAccess().getValueAssignment_1(), "rule__StringConstantExpr__ValueAssignment_1");
					put(grammarAccess.getBooleanConstantExprAccess().getValueAssignment_1(), "rule__BooleanConstantExpr__ValueAssignment_1");
					put(grammarAccess.getFloatConstantExprAccess().getValueAssignment_1(), "rule__FloatConstantExpr__ValueAssignment_1");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			org.jboss.byteman.eclipse.ui.contentassist.antlr.internal.InternalBytemanParser typedParser = (org.jboss.byteman.eclipse.ui.contentassist.antlr.internal.InternalBytemanParser) parser;
			typedParser.entryRuleDomainModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_BM_COMMENT" };
	}
	
	public BytemanGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BytemanGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
