/*
 * generated by Xtext
 */
package org.jboss.byteman.eclipse.ui;

import org.eclipse.jface.preference.IPreferenceStore;
import org.eclipse.ui.internal.WorkbenchPlugin;
import org.eclipse.ui.plugin.AbstractUIPlugin;

import org.eclipse.xtext.ui.editor.syntaxcoloring.IHighlightingConfiguration;
import org.eclipse.xtext.ui.editor.syntaxcoloring.ISemanticHighlightingCalculator;
import org.jboss.byteman.eclipse.BytemanRuntimeModule;
import org.jboss.byteman.eclipse.ui.highlighting.BytemanHighlightingCalculator;
import org.jboss.byteman.eclipse.ui.highlighting.BytemanHighlightingConfiguration;

import com.google.inject.Binder;

/**
 * Use this class to register components to be used within the IDE.
 */
public class BytemanUiModule extends org.jboss.byteman.eclipse.ui.AbstractBytemanUiModule {
	public BytemanUiModule(AbstractUIPlugin plugin) {
		super(plugin);
		// obtain the preferences setting for BYTEMAN_HOME
		IPreferenceStore preferenceStore = plugin.getPreferenceStore();
		String bytemanHome = preferenceStore.getDefaultString(BYTEMAN_HOME_PREFERENCE_KEY);
		BytemanRuntimeModule.setBytemanHome(bytemanHome);
	}
	/**
	 * Registers the components
	 * @param binder
	 */
	public void configure(Binder binder) 
	{
		super.configure(binder);
		binder.bind(IHighlightingConfiguration.class).to(BytemanHighlightingConfiguration.class);
		binder.bind(ISemanticHighlightingCalculator.class).to(BytemanHighlightingCalculator.class);
	}

	/**
	 * key for BYTEMAN_HOME property defined via Byteman Downloads preferences page
	 */
	
	public final static String BYTEMAN_HOME_PREFERENCE_KEY = "org.jboss.byteman.eclipse.byteman.home";
}
